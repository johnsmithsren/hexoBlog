name: Deploy Hexo Blog

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BLOG }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci
          npm install hexo-cli hexo-deployer-git

      - name: Configure Git
        env:
          GITHUB_TOKEN: ${{ secrets.BLOG }}
        run: |
          git config --global user.name 'johnsmithsren'
          git config --global user.email 'rjm1149104294@outlook.com'
          # Use token for authentication instead of standard URL
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Build Hexo Site
        run: |
          npx hexo clean
          npx hexo generate

      - name: Configure Deployment Repository
        run: |
          # Update _config.yml with token-based URL for deployment
          sed -i 's#repository:.*#repository: https://x-access-token:${{ secrets.BLOG }}@github.com/johnsmithsren/renjmBlog.github.io.git#' _config.yml
          # Ensure the repo URL is correctly formatted in your config
          cat _config.yml | grep "repository:"

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.BLOG }}
        run: |
          # Ensure git operations don't prompt for credentials
          GIT_TERMINAL_PROMPT=0 npx hexo deploy || {
            echo "Deployment failed"
            exit 1
          }

      - name: Notify Deployment Status
        if: success()
        run: echo "üöÄ Deployment successful!"

      - name: Error Logging
        if: failure()
        run: |
          echo "‚ùå Deployment failed"
          echo "Git Configuration:"
          git config --list
          echo "Repository Remote:"
          git remote -v
